# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct DataDiskImage <: SwaggerModel
    lun::Any # spec type: Union{ Nothing, Int32 } # spec name: lun

    function DataDiskImage(;lun=nothing)
        o = new()
        validate_property(DataDiskImage, Symbol("lun"), lun)
        setfield!(o, Symbol("lun"), lun)
        o
    end
end # type DataDiskImage

const _property_map_DataDiskImage = Dict{Symbol,Symbol}(Symbol("lun")=>Symbol("lun"))
const _property_types_DataDiskImage = Dict{Symbol,String}(Symbol("lun")=>"Int32")
Base.propertynames(::Type{ DataDiskImage }) = collect(keys(_property_map_DataDiskImage))
Swagger.property_type(::Type{ DataDiskImage }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_DataDiskImage[name]))}
Swagger.field_name(::Type{ DataDiskImage }, property_name::Symbol) =  _property_map_DataDiskImage[property_name]

function check_required(o::DataDiskImage)
    true
end

function validate_property(::Type{ DataDiskImage }, name::Symbol, val)
end
