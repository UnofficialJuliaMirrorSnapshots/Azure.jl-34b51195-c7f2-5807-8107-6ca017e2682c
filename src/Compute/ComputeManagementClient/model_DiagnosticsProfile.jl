# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct DiagnosticsProfile <: SwaggerModel
    bootDiagnostics::Any # spec type: Union{ Nothing, BootDiagnostics } # spec name: bootDiagnostics

    function DiagnosticsProfile(;bootDiagnostics=nothing)
        o = new()
        validate_property(DiagnosticsProfile, Symbol("bootDiagnostics"), bootDiagnostics)
        setfield!(o, Symbol("bootDiagnostics"), bootDiagnostics)
        o
    end
end # type DiagnosticsProfile

const _property_map_DiagnosticsProfile = Dict{Symbol,Symbol}(Symbol("bootDiagnostics")=>Symbol("bootDiagnostics"))
const _property_types_DiagnosticsProfile = Dict{Symbol,String}(Symbol("bootDiagnostics")=>"BootDiagnostics")
Base.propertynames(::Type{ DiagnosticsProfile }) = collect(keys(_property_map_DiagnosticsProfile))
Swagger.property_type(::Type{ DiagnosticsProfile }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_DiagnosticsProfile[name]))}
Swagger.field_name(::Type{ DiagnosticsProfile }, property_name::Symbol) =  _property_map_DiagnosticsProfile[property_name]

function check_required(o::DiagnosticsProfile)
    true
end

function validate_property(::Type{ DiagnosticsProfile }, name::Symbol, val)
end
