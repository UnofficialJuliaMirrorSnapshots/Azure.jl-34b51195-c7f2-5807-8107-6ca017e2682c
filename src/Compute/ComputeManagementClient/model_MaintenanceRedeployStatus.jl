# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct MaintenanceRedeployStatus <: SwaggerModel
    isCustomerInitiatedMaintenanceAllowed::Any # spec type: Union{ Nothing, Bool } # spec name: isCustomerInitiatedMaintenanceAllowed
    preMaintenanceWindowStartTime::Any # spec type: Union{ Nothing, DateTime } # spec name: preMaintenanceWindowStartTime
    preMaintenanceWindowEndTime::Any # spec type: Union{ Nothing, DateTime } # spec name: preMaintenanceWindowEndTime
    maintenanceWindowStartTime::Any # spec type: Union{ Nothing, DateTime } # spec name: maintenanceWindowStartTime
    maintenanceWindowEndTime::Any # spec type: Union{ Nothing, DateTime } # spec name: maintenanceWindowEndTime
    lastOperationResultCode::Any # spec type: Union{ Nothing, String } # spec name: lastOperationResultCode
    lastOperationMessage::Any # spec type: Union{ Nothing, String } # spec name: lastOperationMessage

    function MaintenanceRedeployStatus(;isCustomerInitiatedMaintenanceAllowed=nothing, preMaintenanceWindowStartTime=nothing, preMaintenanceWindowEndTime=nothing, maintenanceWindowStartTime=nothing, maintenanceWindowEndTime=nothing, lastOperationResultCode=nothing, lastOperationMessage=nothing)
        o = new()
        validate_property(MaintenanceRedeployStatus, Symbol("isCustomerInitiatedMaintenanceAllowed"), isCustomerInitiatedMaintenanceAllowed)
        setfield!(o, Symbol("isCustomerInitiatedMaintenanceAllowed"), isCustomerInitiatedMaintenanceAllowed)
        validate_property(MaintenanceRedeployStatus, Symbol("preMaintenanceWindowStartTime"), preMaintenanceWindowStartTime)
        setfield!(o, Symbol("preMaintenanceWindowStartTime"), preMaintenanceWindowStartTime)
        validate_property(MaintenanceRedeployStatus, Symbol("preMaintenanceWindowEndTime"), preMaintenanceWindowEndTime)
        setfield!(o, Symbol("preMaintenanceWindowEndTime"), preMaintenanceWindowEndTime)
        validate_property(MaintenanceRedeployStatus, Symbol("maintenanceWindowStartTime"), maintenanceWindowStartTime)
        setfield!(o, Symbol("maintenanceWindowStartTime"), maintenanceWindowStartTime)
        validate_property(MaintenanceRedeployStatus, Symbol("maintenanceWindowEndTime"), maintenanceWindowEndTime)
        setfield!(o, Symbol("maintenanceWindowEndTime"), maintenanceWindowEndTime)
        validate_property(MaintenanceRedeployStatus, Symbol("lastOperationResultCode"), lastOperationResultCode)
        setfield!(o, Symbol("lastOperationResultCode"), lastOperationResultCode)
        validate_property(MaintenanceRedeployStatus, Symbol("lastOperationMessage"), lastOperationMessage)
        setfield!(o, Symbol("lastOperationMessage"), lastOperationMessage)
        o
    end
end # type MaintenanceRedeployStatus

const _property_map_MaintenanceRedeployStatus = Dict{Symbol,Symbol}(Symbol("isCustomerInitiatedMaintenanceAllowed")=>Symbol("isCustomerInitiatedMaintenanceAllowed"), Symbol("preMaintenanceWindowStartTime")=>Symbol("preMaintenanceWindowStartTime"), Symbol("preMaintenanceWindowEndTime")=>Symbol("preMaintenanceWindowEndTime"), Symbol("maintenanceWindowStartTime")=>Symbol("maintenanceWindowStartTime"), Symbol("maintenanceWindowEndTime")=>Symbol("maintenanceWindowEndTime"), Symbol("lastOperationResultCode")=>Symbol("lastOperationResultCode"), Symbol("lastOperationMessage")=>Symbol("lastOperationMessage"))
const _property_types_MaintenanceRedeployStatus = Dict{Symbol,String}(Symbol("isCustomerInitiatedMaintenanceAllowed")=>"Bool", Symbol("preMaintenanceWindowStartTime")=>"DateTime", Symbol("preMaintenanceWindowEndTime")=>"DateTime", Symbol("maintenanceWindowStartTime")=>"DateTime", Symbol("maintenanceWindowEndTime")=>"DateTime", Symbol("lastOperationResultCode")=>"String", Symbol("lastOperationMessage")=>"String")
Base.propertynames(::Type{ MaintenanceRedeployStatus }) = collect(keys(_property_map_MaintenanceRedeployStatus))
Swagger.property_type(::Type{ MaintenanceRedeployStatus }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_MaintenanceRedeployStatus[name]))}
Swagger.field_name(::Type{ MaintenanceRedeployStatus }, property_name::Symbol) =  _property_map_MaintenanceRedeployStatus[property_name]

const _allowed_MaintenanceRedeployStatus_lastOperationResultCode = ["None", "RetryLater", "MaintenanceAborted", "MaintenanceCompleted"]

function check_required(o::MaintenanceRedeployStatus)
    true
end

function validate_property(::Type{ MaintenanceRedeployStatus }, name::Symbol, val)
    if name === Symbol("lastOperationResultCode")
        Swagger.validate_param(name, "MaintenanceRedeployStatus", :enum, val, _allowed_MaintenanceRedeployStatus_lastOperationResultCode)
    end
end
