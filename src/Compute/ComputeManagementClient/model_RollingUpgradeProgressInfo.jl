# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct RollingUpgradeProgressInfo <: SwaggerModel
    successfulInstanceCount::Any # spec type: Union{ Nothing, Int32 } # spec name: successfulInstanceCount
    failedInstanceCount::Any # spec type: Union{ Nothing, Int32 } # spec name: failedInstanceCount
    inProgressInstanceCount::Any # spec type: Union{ Nothing, Int32 } # spec name: inProgressInstanceCount
    pendingInstanceCount::Any # spec type: Union{ Nothing, Int32 } # spec name: pendingInstanceCount

    function RollingUpgradeProgressInfo(;successfulInstanceCount=nothing, failedInstanceCount=nothing, inProgressInstanceCount=nothing, pendingInstanceCount=nothing)
        o = new()
        validate_property(RollingUpgradeProgressInfo, Symbol("successfulInstanceCount"), successfulInstanceCount)
        setfield!(o, Symbol("successfulInstanceCount"), successfulInstanceCount)
        validate_property(RollingUpgradeProgressInfo, Symbol("failedInstanceCount"), failedInstanceCount)
        setfield!(o, Symbol("failedInstanceCount"), failedInstanceCount)
        validate_property(RollingUpgradeProgressInfo, Symbol("inProgressInstanceCount"), inProgressInstanceCount)
        setfield!(o, Symbol("inProgressInstanceCount"), inProgressInstanceCount)
        validate_property(RollingUpgradeProgressInfo, Symbol("pendingInstanceCount"), pendingInstanceCount)
        setfield!(o, Symbol("pendingInstanceCount"), pendingInstanceCount)
        o
    end
end # type RollingUpgradeProgressInfo

const _property_map_RollingUpgradeProgressInfo = Dict{Symbol,Symbol}(Symbol("successfulInstanceCount")=>Symbol("successfulInstanceCount"), Symbol("failedInstanceCount")=>Symbol("failedInstanceCount"), Symbol("inProgressInstanceCount")=>Symbol("inProgressInstanceCount"), Symbol("pendingInstanceCount")=>Symbol("pendingInstanceCount"))
const _property_types_RollingUpgradeProgressInfo = Dict{Symbol,String}(Symbol("successfulInstanceCount")=>"Int32", Symbol("failedInstanceCount")=>"Int32", Symbol("inProgressInstanceCount")=>"Int32", Symbol("pendingInstanceCount")=>"Int32")
Base.propertynames(::Type{ RollingUpgradeProgressInfo }) = collect(keys(_property_map_RollingUpgradeProgressInfo))
Swagger.property_type(::Type{ RollingUpgradeProgressInfo }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_RollingUpgradeProgressInfo[name]))}
Swagger.field_name(::Type{ RollingUpgradeProgressInfo }, property_name::Symbol) =  _property_map_RollingUpgradeProgressInfo[property_name]

function check_required(o::RollingUpgradeProgressInfo)
    true
end

function validate_property(::Type{ RollingUpgradeProgressInfo }, name::Symbol, val)
end
