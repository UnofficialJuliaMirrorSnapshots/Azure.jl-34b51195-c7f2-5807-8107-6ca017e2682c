# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct SshPublicKey <: SwaggerModel
    path::Any # spec type: Union{ Nothing, String } # spec name: path
    keyData::Any # spec type: Union{ Nothing, String } # spec name: keyData

    function SshPublicKey(;path=nothing, keyData=nothing)
        o = new()
        validate_property(SshPublicKey, Symbol("path"), path)
        setfield!(o, Symbol("path"), path)
        validate_property(SshPublicKey, Symbol("keyData"), keyData)
        setfield!(o, Symbol("keyData"), keyData)
        o
    end
end # type SshPublicKey

const _property_map_SshPublicKey = Dict{Symbol,Symbol}(Symbol("path")=>Symbol("path"), Symbol("keyData")=>Symbol("keyData"))
const _property_types_SshPublicKey = Dict{Symbol,String}(Symbol("path")=>"String", Symbol("keyData")=>"String")
Base.propertynames(::Type{ SshPublicKey }) = collect(keys(_property_map_SshPublicKey))
Swagger.property_type(::Type{ SshPublicKey }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_SshPublicKey[name]))}
Swagger.field_name(::Type{ SshPublicKey }, property_name::Symbol) =  _property_map_SshPublicKey[property_name]

function check_required(o::SshPublicKey)
    true
end

function validate_property(::Type{ SshPublicKey }, name::Symbol, val)
end
