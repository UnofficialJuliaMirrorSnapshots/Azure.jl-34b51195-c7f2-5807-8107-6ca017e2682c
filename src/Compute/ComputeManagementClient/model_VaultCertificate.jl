# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VaultCertificate <: SwaggerModel
    certificateUrl::Any # spec type: Union{ Nothing, String } # spec name: certificateUrl
    certificateStore::Any # spec type: Union{ Nothing, String } # spec name: certificateStore

    function VaultCertificate(;certificateUrl=nothing, certificateStore=nothing)
        o = new()
        validate_property(VaultCertificate, Symbol("certificateUrl"), certificateUrl)
        setfield!(o, Symbol("certificateUrl"), certificateUrl)
        validate_property(VaultCertificate, Symbol("certificateStore"), certificateStore)
        setfield!(o, Symbol("certificateStore"), certificateStore)
        o
    end
end # type VaultCertificate

const _property_map_VaultCertificate = Dict{Symbol,Symbol}(Symbol("certificateUrl")=>Symbol("certificateUrl"), Symbol("certificateStore")=>Symbol("certificateStore"))
const _property_types_VaultCertificate = Dict{Symbol,String}(Symbol("certificateUrl")=>"String", Symbol("certificateStore")=>"String")
Base.propertynames(::Type{ VaultCertificate }) = collect(keys(_property_map_VaultCertificate))
Swagger.property_type(::Type{ VaultCertificate }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VaultCertificate[name]))}
Swagger.field_name(::Type{ VaultCertificate }, property_name::Symbol) =  _property_map_VaultCertificate[property_name]

function check_required(o::VaultCertificate)
    true
end

function validate_property(::Type{ VaultCertificate }, name::Symbol, val)
end
