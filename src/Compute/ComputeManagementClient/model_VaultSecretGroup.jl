# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VaultSecretGroup <: SwaggerModel
    sourceVault::Any # spec type: Union{ Nothing, SubResource } # spec name: sourceVault
    vaultCertificates::Any # spec type: Union{ Nothing, Vector{VaultCertificate} } # spec name: vaultCertificates

    function VaultSecretGroup(;sourceVault=nothing, vaultCertificates=nothing)
        o = new()
        validate_property(VaultSecretGroup, Symbol("sourceVault"), sourceVault)
        setfield!(o, Symbol("sourceVault"), sourceVault)
        validate_property(VaultSecretGroup, Symbol("vaultCertificates"), vaultCertificates)
        setfield!(o, Symbol("vaultCertificates"), vaultCertificates)
        o
    end
end # type VaultSecretGroup

const _property_map_VaultSecretGroup = Dict{Symbol,Symbol}(Symbol("sourceVault")=>Symbol("sourceVault"), Symbol("vaultCertificates")=>Symbol("vaultCertificates"))
const _property_types_VaultSecretGroup = Dict{Symbol,String}(Symbol("sourceVault")=>"SubResource", Symbol("vaultCertificates")=>"Vector{VaultCertificate}")
Base.propertynames(::Type{ VaultSecretGroup }) = collect(keys(_property_map_VaultSecretGroup))
Swagger.property_type(::Type{ VaultSecretGroup }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VaultSecretGroup[name]))}
Swagger.field_name(::Type{ VaultSecretGroup }, property_name::Symbol) =  _property_map_VaultSecretGroup[property_name]

function check_required(o::VaultSecretGroup)
    true
end

function validate_property(::Type{ VaultSecretGroup }, name::Symbol, val)
end
