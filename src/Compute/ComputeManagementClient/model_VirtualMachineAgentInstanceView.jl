# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VirtualMachineAgentInstanceView <: SwaggerModel
    vmAgentVersion::Any # spec type: Union{ Nothing, String } # spec name: vmAgentVersion
    extensionHandlers::Any # spec type: Union{ Nothing, Vector{VirtualMachineExtensionHandlerInstanceView} } # spec name: extensionHandlers
    statuses::Any # spec type: Union{ Nothing, Vector{InstanceViewStatus} } # spec name: statuses

    function VirtualMachineAgentInstanceView(;vmAgentVersion=nothing, extensionHandlers=nothing, statuses=nothing)
        o = new()
        validate_property(VirtualMachineAgentInstanceView, Symbol("vmAgentVersion"), vmAgentVersion)
        setfield!(o, Symbol("vmAgentVersion"), vmAgentVersion)
        validate_property(VirtualMachineAgentInstanceView, Symbol("extensionHandlers"), extensionHandlers)
        setfield!(o, Symbol("extensionHandlers"), extensionHandlers)
        validate_property(VirtualMachineAgentInstanceView, Symbol("statuses"), statuses)
        setfield!(o, Symbol("statuses"), statuses)
        o
    end
end # type VirtualMachineAgentInstanceView

const _property_map_VirtualMachineAgentInstanceView = Dict{Symbol,Symbol}(Symbol("vmAgentVersion")=>Symbol("vmAgentVersion"), Symbol("extensionHandlers")=>Symbol("extensionHandlers"), Symbol("statuses")=>Symbol("statuses"))
const _property_types_VirtualMachineAgentInstanceView = Dict{Symbol,String}(Symbol("vmAgentVersion")=>"String", Symbol("extensionHandlers")=>"Vector{VirtualMachineExtensionHandlerInstanceView}", Symbol("statuses")=>"Vector{InstanceViewStatus}")
Base.propertynames(::Type{ VirtualMachineAgentInstanceView }) = collect(keys(_property_map_VirtualMachineAgentInstanceView))
Swagger.property_type(::Type{ VirtualMachineAgentInstanceView }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VirtualMachineAgentInstanceView[name]))}
Swagger.field_name(::Type{ VirtualMachineAgentInstanceView }, property_name::Symbol) =  _property_map_VirtualMachineAgentInstanceView[property_name]

function check_required(o::VirtualMachineAgentInstanceView)
    true
end

function validate_property(::Type{ VirtualMachineAgentInstanceView }, name::Symbol, val)
end
