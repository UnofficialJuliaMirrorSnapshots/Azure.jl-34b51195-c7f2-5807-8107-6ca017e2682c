# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VirtualMachineExtensionInstanceView <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    type::Any # spec type: Union{ Nothing, String } # spec name: type
    typeHandlerVersion::Any # spec type: Union{ Nothing, String } # spec name: typeHandlerVersion
    substatuses::Any # spec type: Union{ Nothing, Vector{InstanceViewStatus} } # spec name: substatuses
    statuses::Any # spec type: Union{ Nothing, Vector{InstanceViewStatus} } # spec name: statuses

    function VirtualMachineExtensionInstanceView(;name=nothing, type=nothing, typeHandlerVersion=nothing, substatuses=nothing, statuses=nothing)
        o = new()
        validate_property(VirtualMachineExtensionInstanceView, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(VirtualMachineExtensionInstanceView, Symbol("type"), type)
        setfield!(o, Symbol("type"), type)
        validate_property(VirtualMachineExtensionInstanceView, Symbol("typeHandlerVersion"), typeHandlerVersion)
        setfield!(o, Symbol("typeHandlerVersion"), typeHandlerVersion)
        validate_property(VirtualMachineExtensionInstanceView, Symbol("substatuses"), substatuses)
        setfield!(o, Symbol("substatuses"), substatuses)
        validate_property(VirtualMachineExtensionInstanceView, Symbol("statuses"), statuses)
        setfield!(o, Symbol("statuses"), statuses)
        o
    end
end # type VirtualMachineExtensionInstanceView

const _property_map_VirtualMachineExtensionInstanceView = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"), Symbol("type")=>Symbol("type"), Symbol("typeHandlerVersion")=>Symbol("typeHandlerVersion"), Symbol("substatuses")=>Symbol("substatuses"), Symbol("statuses")=>Symbol("statuses"))
const _property_types_VirtualMachineExtensionInstanceView = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", Symbol("typeHandlerVersion")=>"String", Symbol("substatuses")=>"Vector{InstanceViewStatus}", Symbol("statuses")=>"Vector{InstanceViewStatus}")
Base.propertynames(::Type{ VirtualMachineExtensionInstanceView }) = collect(keys(_property_map_VirtualMachineExtensionInstanceView))
Swagger.property_type(::Type{ VirtualMachineExtensionInstanceView }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VirtualMachineExtensionInstanceView[name]))}
Swagger.field_name(::Type{ VirtualMachineExtensionInstanceView }, property_name::Symbol) =  _property_map_VirtualMachineExtensionInstanceView[property_name]

function check_required(o::VirtualMachineExtensionInstanceView)
    true
end

function validate_property(::Type{ VirtualMachineExtensionInstanceView }, name::Symbol, val)
end
