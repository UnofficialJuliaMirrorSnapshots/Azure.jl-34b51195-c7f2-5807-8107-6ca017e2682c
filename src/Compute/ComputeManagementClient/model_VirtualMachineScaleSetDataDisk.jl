# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VirtualMachineScaleSetDataDisk <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    lun::Any # spec type: Union{ Nothing, Int32 } # spec name: lun
    caching::Any # spec type: Union{ Nothing, Caching } # spec name: caching
    createOption::Any # spec type: Union{ Nothing, CreateOption } # spec name: createOption
    diskSizeGB::Any # spec type: Union{ Nothing, Int32 } # spec name: diskSizeGB
    managedDisk::Any # spec type: Union{ Nothing, VirtualMachineScaleSetManagedDiskParameters } # spec name: managedDisk

    function VirtualMachineScaleSetDataDisk(;name=nothing, lun=nothing, caching=nothing, createOption=nothing, diskSizeGB=nothing, managedDisk=nothing)
        o = new()
        validate_property(VirtualMachineScaleSetDataDisk, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(VirtualMachineScaleSetDataDisk, Symbol("lun"), lun)
        setfield!(o, Symbol("lun"), lun)
        validate_property(VirtualMachineScaleSetDataDisk, Symbol("caching"), caching)
        setfield!(o, Symbol("caching"), caching)
        validate_property(VirtualMachineScaleSetDataDisk, Symbol("createOption"), createOption)
        setfield!(o, Symbol("createOption"), createOption)
        validate_property(VirtualMachineScaleSetDataDisk, Symbol("diskSizeGB"), diskSizeGB)
        setfield!(o, Symbol("diskSizeGB"), diskSizeGB)
        validate_property(VirtualMachineScaleSetDataDisk, Symbol("managedDisk"), managedDisk)
        setfield!(o, Symbol("managedDisk"), managedDisk)
        o
    end
end # type VirtualMachineScaleSetDataDisk

const _property_map_VirtualMachineScaleSetDataDisk = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"), Symbol("lun")=>Symbol("lun"), Symbol("caching")=>Symbol("caching"), Symbol("createOption")=>Symbol("createOption"), Symbol("diskSizeGB")=>Symbol("diskSizeGB"), Symbol("managedDisk")=>Symbol("managedDisk"))
const _property_types_VirtualMachineScaleSetDataDisk = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("lun")=>"Int32", Symbol("caching")=>"Caching", Symbol("createOption")=>"CreateOption", Symbol("diskSizeGB")=>"Int32", Symbol("managedDisk")=>"VirtualMachineScaleSetManagedDiskParameters")
Base.propertynames(::Type{ VirtualMachineScaleSetDataDisk }) = collect(keys(_property_map_VirtualMachineScaleSetDataDisk))
Swagger.property_type(::Type{ VirtualMachineScaleSetDataDisk }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VirtualMachineScaleSetDataDisk[name]))}
Swagger.field_name(::Type{ VirtualMachineScaleSetDataDisk }, property_name::Symbol) =  _property_map_VirtualMachineScaleSetDataDisk[property_name]

function check_required(o::VirtualMachineScaleSetDataDisk)
    (getproperty(o, Symbol("lun")) === nothing) && (return false)
    (getproperty(o, Symbol("createOption")) === nothing) && (return false)
    true
end

function validate_property(::Type{ VirtualMachineScaleSetDataDisk }, name::Symbol, val)
end
