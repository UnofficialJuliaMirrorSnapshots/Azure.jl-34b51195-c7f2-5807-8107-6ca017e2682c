# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VirtualMachineScaleSetNetworkConfiguration <: SwaggerModel
    id::Any # spec type: Union{ Nothing, String } # spec name: id
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    properties::Any # spec type: Union{ Nothing, VirtualMachineScaleSetNetworkConfigurationProperties } # spec name: properties

    function VirtualMachineScaleSetNetworkConfiguration(;id=nothing, name=nothing, properties=nothing)
        o = new()
        validate_property(VirtualMachineScaleSetNetworkConfiguration, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(VirtualMachineScaleSetNetworkConfiguration, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(VirtualMachineScaleSetNetworkConfiguration, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type VirtualMachineScaleSetNetworkConfiguration

const _property_map_VirtualMachineScaleSetNetworkConfiguration = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("name")=>Symbol("name"), Symbol("properties")=>Symbol("properties"))
const _property_types_VirtualMachineScaleSetNetworkConfiguration = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("properties")=>"VirtualMachineScaleSetNetworkConfigurationProperties")
Base.propertynames(::Type{ VirtualMachineScaleSetNetworkConfiguration }) = collect(keys(_property_map_VirtualMachineScaleSetNetworkConfiguration))
Swagger.property_type(::Type{ VirtualMachineScaleSetNetworkConfiguration }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VirtualMachineScaleSetNetworkConfiguration[name]))}
Swagger.field_name(::Type{ VirtualMachineScaleSetNetworkConfiguration }, property_name::Symbol) =  _property_map_VirtualMachineScaleSetNetworkConfiguration[property_name]

function check_required(o::VirtualMachineScaleSetNetworkConfiguration)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ VirtualMachineScaleSetNetworkConfiguration }, name::Symbol, val)
end
