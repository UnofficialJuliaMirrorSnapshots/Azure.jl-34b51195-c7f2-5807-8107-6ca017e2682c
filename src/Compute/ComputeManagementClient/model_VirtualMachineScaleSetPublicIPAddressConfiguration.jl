# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VirtualMachineScaleSetPublicIPAddressConfiguration <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    properties::Any # spec type: Union{ Nothing, VirtualMachineScaleSetPublicIPAddressConfigurationProperties } # spec name: properties

    function VirtualMachineScaleSetPublicIPAddressConfiguration(;name=nothing, properties=nothing)
        o = new()
        validate_property(VirtualMachineScaleSetPublicIPAddressConfiguration, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(VirtualMachineScaleSetPublicIPAddressConfiguration, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type VirtualMachineScaleSetPublicIPAddressConfiguration

const _property_map_VirtualMachineScaleSetPublicIPAddressConfiguration = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"), Symbol("properties")=>Symbol("properties"))
const _property_types_VirtualMachineScaleSetPublicIPAddressConfiguration = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("properties")=>"VirtualMachineScaleSetPublicIPAddressConfigurationProperties")
Base.propertynames(::Type{ VirtualMachineScaleSetPublicIPAddressConfiguration }) = collect(keys(_property_map_VirtualMachineScaleSetPublicIPAddressConfiguration))
Swagger.property_type(::Type{ VirtualMachineScaleSetPublicIPAddressConfiguration }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VirtualMachineScaleSetPublicIPAddressConfiguration[name]))}
Swagger.field_name(::Type{ VirtualMachineScaleSetPublicIPAddressConfiguration }, property_name::Symbol) =  _property_map_VirtualMachineScaleSetPublicIPAddressConfiguration[property_name]

function check_required(o::VirtualMachineScaleSetPublicIPAddressConfiguration)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ VirtualMachineScaleSetPublicIPAddressConfiguration }, name::Symbol, val)
end
