# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ContainerServiceCustomProfile <: SwaggerModel
    orchestrator::Any # spec type: Union{ Nothing, String } # spec name: orchestrator

    function ContainerServiceCustomProfile(;orchestrator=nothing)
        o = new()
        validate_property(ContainerServiceCustomProfile, Symbol("orchestrator"), orchestrator)
        setfield!(o, Symbol("orchestrator"), orchestrator)
        o
    end
end # type ContainerServiceCustomProfile

const _property_map_ContainerServiceCustomProfile = Dict{Symbol,Symbol}(Symbol("orchestrator")=>Symbol("orchestrator"))
const _property_types_ContainerServiceCustomProfile = Dict{Symbol,String}(Symbol("orchestrator")=>"String")
Base.propertynames(::Type{ ContainerServiceCustomProfile }) = collect(keys(_property_map_ContainerServiceCustomProfile))
Swagger.property_type(::Type{ ContainerServiceCustomProfile }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ContainerServiceCustomProfile[name]))}
Swagger.field_name(::Type{ ContainerServiceCustomProfile }, property_name::Symbol) =  _property_map_ContainerServiceCustomProfile[property_name]

function check_required(o::ContainerServiceCustomProfile)
    (getproperty(o, Symbol("orchestrator")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ContainerServiceCustomProfile }, name::Symbol, val)
end
