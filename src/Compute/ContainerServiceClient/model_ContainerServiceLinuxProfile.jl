# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ContainerServiceLinuxProfile <: SwaggerModel
    adminUsername::Any # spec type: Union{ Nothing, String } # spec name: adminUsername
    ssh::Any # spec type: Union{ Nothing, ContainerServiceSshConfiguration } # spec name: ssh

    function ContainerServiceLinuxProfile(;adminUsername=nothing, ssh=nothing)
        o = new()
        validate_property(ContainerServiceLinuxProfile, Symbol("adminUsername"), adminUsername)
        setfield!(o, Symbol("adminUsername"), adminUsername)
        validate_property(ContainerServiceLinuxProfile, Symbol("ssh"), ssh)
        setfield!(o, Symbol("ssh"), ssh)
        o
    end
end # type ContainerServiceLinuxProfile

const _property_map_ContainerServiceLinuxProfile = Dict{Symbol,Symbol}(Symbol("adminUsername")=>Symbol("adminUsername"), Symbol("ssh")=>Symbol("ssh"))
const _property_types_ContainerServiceLinuxProfile = Dict{Symbol,String}(Symbol("adminUsername")=>"String", Symbol("ssh")=>"ContainerServiceSshConfiguration")
Base.propertynames(::Type{ ContainerServiceLinuxProfile }) = collect(keys(_property_map_ContainerServiceLinuxProfile))
Swagger.property_type(::Type{ ContainerServiceLinuxProfile }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ContainerServiceLinuxProfile[name]))}
Swagger.field_name(::Type{ ContainerServiceLinuxProfile }, property_name::Symbol) =  _property_map_ContainerServiceLinuxProfile[property_name]

function check_required(o::ContainerServiceLinuxProfile)
    (getproperty(o, Symbol("adminUsername")) === nothing) && (return false)
    (getproperty(o, Symbol("ssh")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ContainerServiceLinuxProfile }, name::Symbol, val)
    if name === Symbol("adminUsername")
    end
end
