# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ContainerServiceSshConfiguration <: SwaggerModel
    publicKeys::Any # spec type: Union{ Nothing, Vector{ContainerServiceSshPublicKey} } # spec name: publicKeys

    function ContainerServiceSshConfiguration(;publicKeys=nothing)
        o = new()
        validate_property(ContainerServiceSshConfiguration, Symbol("publicKeys"), publicKeys)
        setfield!(o, Symbol("publicKeys"), publicKeys)
        o
    end
end # type ContainerServiceSshConfiguration

const _property_map_ContainerServiceSshConfiguration = Dict{Symbol,Symbol}(Symbol("publicKeys")=>Symbol("publicKeys"))
const _property_types_ContainerServiceSshConfiguration = Dict{Symbol,String}(Symbol("publicKeys")=>"Vector{ContainerServiceSshPublicKey}")
Base.propertynames(::Type{ ContainerServiceSshConfiguration }) = collect(keys(_property_map_ContainerServiceSshConfiguration))
Swagger.property_type(::Type{ ContainerServiceSshConfiguration }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ContainerServiceSshConfiguration[name]))}
Swagger.field_name(::Type{ ContainerServiceSshConfiguration }, property_name::Symbol) =  _property_map_ContainerServiceSshConfiguration[property_name]

function check_required(o::ContainerServiceSshConfiguration)
    (getproperty(o, Symbol("publicKeys")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ContainerServiceSshConfiguration }, name::Symbol, val)
end
