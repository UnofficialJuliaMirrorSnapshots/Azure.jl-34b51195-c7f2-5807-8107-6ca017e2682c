# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ContainerServiceSshPublicKey <: SwaggerModel
    keyData::Any # spec type: Union{ Nothing, String } # spec name: keyData

    function ContainerServiceSshPublicKey(;keyData=nothing)
        o = new()
        validate_property(ContainerServiceSshPublicKey, Symbol("keyData"), keyData)
        setfield!(o, Symbol("keyData"), keyData)
        o
    end
end # type ContainerServiceSshPublicKey

const _property_map_ContainerServiceSshPublicKey = Dict{Symbol,Symbol}(Symbol("keyData")=>Symbol("keyData"))
const _property_types_ContainerServiceSshPublicKey = Dict{Symbol,String}(Symbol("keyData")=>"String")
Base.propertynames(::Type{ ContainerServiceSshPublicKey }) = collect(keys(_property_map_ContainerServiceSshPublicKey))
Swagger.property_type(::Type{ ContainerServiceSshPublicKey }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ContainerServiceSshPublicKey[name]))}
Swagger.field_name(::Type{ ContainerServiceSshPublicKey }, property_name::Symbol) =  _property_map_ContainerServiceSshPublicKey[property_name]

function check_required(o::ContainerServiceSshPublicKey)
    (getproperty(o, Symbol("keyData")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ContainerServiceSshPublicKey }, name::Symbol, val)
end
