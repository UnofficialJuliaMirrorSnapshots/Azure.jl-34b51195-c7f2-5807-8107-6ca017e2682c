# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


struct DisksApi <: SwaggerApi
    client::Swagger.Client
end

"""

Creates or updates a disk.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: diskName::String (required)
Param: api_version::String (required)
Param: disk::Disk (required)
Return: Disk
"""
function disksCreateOrUpdate(_api::DisksApi, subscriptionId::String, resourceGroupName::String, diskName::String, api_version::String, disk; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", Disk, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", ["azure_auth"], disk)
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "diskName", diskName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

"""

Deletes a disk.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: diskName::String (required)
Param: api_version::String (required)
Return: OperationStatusResponse
"""
function disksDelete(_api::DisksApi, subscriptionId::String, resourceGroupName::String, diskName::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", OperationStatusResponse, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "diskName", diskName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

"""

Gets information about a disk.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: diskName::String (required)
Param: api_version::String (required)
Return: Disk
"""
function disksGet(_api::DisksApi, subscriptionId::String, resourceGroupName::String, diskName::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", Disk, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "diskName", diskName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

"""

Grants access to a disk.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: diskName::String (required)
Param: api_version::String (required)
Param: grantAccessData::GrantAccessData (required)
Return: AccessUri
"""
function disksGrantAccess(_api::DisksApi, subscriptionId::String, resourceGroupName::String, diskName::String, api_version::String, grantAccessData; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", AccessUri, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/beginGetAccess", ["azure_auth"], grantAccessData)
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "diskName", diskName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

"""

Lists all the disks under a subscription.
Param: subscriptionId::String (required)
Param: api_version::String (required)
Return: DiskList
"""
function disksList(_api::DisksApi, subscriptionId::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", DiskList, "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/disks", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

"""

Lists all the disks under a resource group.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: api_version::String (required)
Return: DiskList
"""
function disksListByResourceGroup(_api::DisksApi, subscriptionId::String, resourceGroupName::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", DiskList, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

"""

Revokes access to a disk.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: diskName::String (required)
Param: api_version::String (required)
Return: OperationStatusResponse
"""
function disksRevokeAccess(_api::DisksApi, subscriptionId::String, resourceGroupName::String, diskName::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OperationStatusResponse, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}/endGetAccess", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "diskName", diskName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

"""

Updates (patches) a disk.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: diskName::String (required)
Param: api_version::String (required)
Param: disk::DiskUpdate (required)
Return: Disk
"""
function disksUpdate(_api::DisksApi, subscriptionId::String, resourceGroupName::String, diskName::String, api_version::String, disk; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", Disk, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/disks/{diskName}", ["azure_auth"], disk)
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "diskName", diskName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    Swagger.exec(_ctx)
end

export disksCreateOrUpdate, disksDelete, disksGet, disksGrantAccess, disksList, disksListByResourceGroup, disksRevokeAccess, disksUpdate
