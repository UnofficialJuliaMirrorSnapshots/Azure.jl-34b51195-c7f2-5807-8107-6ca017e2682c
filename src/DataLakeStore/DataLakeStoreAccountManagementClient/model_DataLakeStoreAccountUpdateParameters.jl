# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct DataLakeStoreAccountUpdateParameters <: SwaggerModel
    tags::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: tags
    properties::Any # spec type: Union{ Nothing, UpdateDataLakeStoreAccountProperties } # spec name: properties

    function DataLakeStoreAccountUpdateParameters(;tags=nothing, properties=nothing)
        o = new()
        validate_property(DataLakeStoreAccountUpdateParameters, Symbol("tags"), tags)
        setfield!(o, Symbol("tags"), tags)
        validate_property(DataLakeStoreAccountUpdateParameters, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type DataLakeStoreAccountUpdateParameters

const _property_map_DataLakeStoreAccountUpdateParameters = Dict{Symbol,Symbol}(Symbol("tags")=>Symbol("tags"), Symbol("properties")=>Symbol("properties"))
const _property_types_DataLakeStoreAccountUpdateParameters = Dict{Symbol,String}(Symbol("tags")=>"Dict{String, String}", Symbol("properties")=>"UpdateDataLakeStoreAccountProperties")
Base.propertynames(::Type{ DataLakeStoreAccountUpdateParameters }) = collect(keys(_property_map_DataLakeStoreAccountUpdateParameters))
Swagger.property_type(::Type{ DataLakeStoreAccountUpdateParameters }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_DataLakeStoreAccountUpdateParameters[name]))}
Swagger.field_name(::Type{ DataLakeStoreAccountUpdateParameters }, property_name::Symbol) =  _property_map_DataLakeStoreAccountUpdateParameters[property_name]

function check_required(o::DataLakeStoreAccountUpdateParameters)
    true
end

function validate_property(::Type{ DataLakeStoreAccountUpdateParameters }, name::Symbol, val)
end
