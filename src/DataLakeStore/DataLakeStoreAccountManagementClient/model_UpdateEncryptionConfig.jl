# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct UpdateEncryptionConfig <: SwaggerModel
    keyVaultMetaInfo::Any # spec type: Union{ Nothing, UpdateKeyVaultMetaInfo } # spec name: keyVaultMetaInfo

    function UpdateEncryptionConfig(;keyVaultMetaInfo=nothing)
        o = new()
        validate_property(UpdateEncryptionConfig, Symbol("keyVaultMetaInfo"), keyVaultMetaInfo)
        setfield!(o, Symbol("keyVaultMetaInfo"), keyVaultMetaInfo)
        o
    end
end # type UpdateEncryptionConfig

const _property_map_UpdateEncryptionConfig = Dict{Symbol,Symbol}(Symbol("keyVaultMetaInfo")=>Symbol("keyVaultMetaInfo"))
const _property_types_UpdateEncryptionConfig = Dict{Symbol,String}(Symbol("keyVaultMetaInfo")=>"UpdateKeyVaultMetaInfo")
Base.propertynames(::Type{ UpdateEncryptionConfig }) = collect(keys(_property_map_UpdateEncryptionConfig))
Swagger.property_type(::Type{ UpdateEncryptionConfig }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_UpdateEncryptionConfig[name]))}
Swagger.field_name(::Type{ UpdateEncryptionConfig }, property_name::Symbol) =  _property_map_UpdateEncryptionConfig[property_name]

function check_required(o::UpdateEncryptionConfig)
    true
end

function validate_property(::Type{ UpdateEncryptionConfig }, name::Symbol, val)
end
