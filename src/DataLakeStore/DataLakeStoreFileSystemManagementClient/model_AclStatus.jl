# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct AclStatus <: SwaggerModel
    entries::Any # spec type: Union{ Nothing, Vector{String} } # spec name: entries
    group::Any # spec type: Union{ Nothing, String } # spec name: group
    owner::Any # spec type: Union{ Nothing, String } # spec name: owner
    permission::Any # spec type: Union{ Nothing, Int32 } # spec name: permission
    stickyBit::Any # spec type: Union{ Nothing, Bool } # spec name: stickyBit

    function AclStatus(;entries=nothing, group=nothing, owner=nothing, permission=nothing, stickyBit=nothing)
        o = new()
        validate_property(AclStatus, Symbol("entries"), entries)
        setfield!(o, Symbol("entries"), entries)
        validate_property(AclStatus, Symbol("group"), group)
        setfield!(o, Symbol("group"), group)
        validate_property(AclStatus, Symbol("owner"), owner)
        setfield!(o, Symbol("owner"), owner)
        validate_property(AclStatus, Symbol("permission"), permission)
        setfield!(o, Symbol("permission"), permission)
        validate_property(AclStatus, Symbol("stickyBit"), stickyBit)
        setfield!(o, Symbol("stickyBit"), stickyBit)
        o
    end
end # type AclStatus

const _property_map_AclStatus = Dict{Symbol,Symbol}(Symbol("entries")=>Symbol("entries"), Symbol("group")=>Symbol("group"), Symbol("owner")=>Symbol("owner"), Symbol("permission")=>Symbol("permission"), Symbol("stickyBit")=>Symbol("stickyBit"))
const _property_types_AclStatus = Dict{Symbol,String}(Symbol("entries")=>"Vector{String}", Symbol("group")=>"String", Symbol("owner")=>"String", Symbol("permission")=>"Int32", Symbol("stickyBit")=>"Bool")
Base.propertynames(::Type{ AclStatus }) = collect(keys(_property_map_AclStatus))
Swagger.property_type(::Type{ AclStatus }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_AclStatus[name]))}
Swagger.field_name(::Type{ AclStatus }, property_name::Symbol) =  _property_map_AclStatus[property_name]

function check_required(o::AclStatus)
    true
end

function validate_property(::Type{ AclStatus }, name::Symbol, val)
end
