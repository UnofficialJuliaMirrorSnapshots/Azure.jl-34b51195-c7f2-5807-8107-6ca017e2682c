# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct AdlsFileNotFoundException <: SwaggerModel
    exception::Any # spec type: Union{ Nothing, String } # spec name: exception
    javaClassName::Any # spec type: Union{ Nothing, String } # spec name: javaClassName
    message::Any # spec type: Union{ Nothing, String } # spec name: message

    function AdlsFileNotFoundException(;exception=nothing, javaClassName=nothing, message=nothing)
        o = new()
        validate_property(AdlsFileNotFoundException, Symbol("exception"), exception)
        setfield!(o, Symbol("exception"), exception)
        validate_property(AdlsFileNotFoundException, Symbol("javaClassName"), javaClassName)
        setfield!(o, Symbol("javaClassName"), javaClassName)
        validate_property(AdlsFileNotFoundException, Symbol("message"), message)
        setfield!(o, Symbol("message"), message)
        o
    end
end # type AdlsFileNotFoundException

const _property_map_AdlsFileNotFoundException = Dict{Symbol,Symbol}(Symbol("exception")=>Symbol("exception"), Symbol("javaClassName")=>Symbol("javaClassName"), Symbol("message")=>Symbol("message"))
const _property_types_AdlsFileNotFoundException = Dict{Symbol,String}(Symbol("exception")=>"String", Symbol("javaClassName")=>"String", Symbol("message")=>"String")
Base.propertynames(::Type{ AdlsFileNotFoundException }) = collect(keys(_property_map_AdlsFileNotFoundException))
Swagger.property_type(::Type{ AdlsFileNotFoundException }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_AdlsFileNotFoundException[name]))}
Swagger.field_name(::Type{ AdlsFileNotFoundException }, property_name::Symbol) =  _property_map_AdlsFileNotFoundException[property_name]

function check_required(o::AdlsFileNotFoundException)
    (getproperty(o, Symbol("exception")) === nothing) && (return false)
    true
end

function validate_property(::Type{ AdlsFileNotFoundException }, name::Symbol, val)
end
