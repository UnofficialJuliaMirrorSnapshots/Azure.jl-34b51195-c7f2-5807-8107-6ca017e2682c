# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct FileStatusesResult <: SwaggerModel
    FileStatuses::Any # spec type: Union{ Nothing, FileStatuses } # spec name: FileStatuses

    function FileStatusesResult(;FileStatuses=nothing)
        o = new()
        validate_property(FileStatusesResult, Symbol("FileStatuses"), FileStatuses)
        setfield!(o, Symbol("FileStatuses"), FileStatuses)
        o
    end
end # type FileStatusesResult

const _property_map_FileStatusesResult = Dict{Symbol,Symbol}(Symbol("FileStatuses")=>Symbol("FileStatuses"))
const _property_types_FileStatusesResult = Dict{Symbol,String}(Symbol("FileStatuses")=>"FileStatuses")
Base.propertynames(::Type{ FileStatusesResult }) = collect(keys(_property_map_FileStatusesResult))
Swagger.property_type(::Type{ FileStatusesResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_FileStatusesResult[name]))}
Swagger.field_name(::Type{ FileStatusesResult }, property_name::Symbol) =  _property_map_FileStatusesResult[property_name]

function check_required(o::FileStatusesResult)
    true
end

function validate_property(::Type{ FileStatusesResult }, name::Symbol, val)
end
