# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ApplicationGatewaySslPolicy <: SwaggerModel
    disabledSslProtocols::Any # spec type: Union{ Nothing, Vector{String} } # spec name: disabledSslProtocols

    function ApplicationGatewaySslPolicy(;disabledSslProtocols=nothing)
        o = new()
        validate_property(ApplicationGatewaySslPolicy, Symbol("disabledSslProtocols"), disabledSslProtocols)
        setfield!(o, Symbol("disabledSslProtocols"), disabledSslProtocols)
        o
    end
end # type ApplicationGatewaySslPolicy

const _property_map_ApplicationGatewaySslPolicy = Dict{Symbol,Symbol}(Symbol("disabledSslProtocols")=>Symbol("disabledSslProtocols"))
const _property_types_ApplicationGatewaySslPolicy = Dict{Symbol,String}(Symbol("disabledSslProtocols")=>"Vector{String}")
Base.propertynames(::Type{ ApplicationGatewaySslPolicy }) = collect(keys(_property_map_ApplicationGatewaySslPolicy))
Swagger.property_type(::Type{ ApplicationGatewaySslPolicy }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ApplicationGatewaySslPolicy[name]))}
Swagger.field_name(::Type{ ApplicationGatewaySslPolicy }, property_name::Symbol) =  _property_map_ApplicationGatewaySslPolicy[property_name]

const _allowed_ApplicationGatewaySslPolicy_disabledSslProtocols = ["TLSv1_0", "TLSv1_1", "TLSv1_2"]

function check_required(o::ApplicationGatewaySslPolicy)
    true
end

function validate_property(::Type{ ApplicationGatewaySslPolicy }, name::Symbol, val)
    if name === Symbol("disabledSslProtocols")
        Swagger.validate_param(name, "ApplicationGatewaySslPolicy", :enum, val, _allowed_ApplicationGatewaySslPolicy_disabledSslProtocols)
    end
end
