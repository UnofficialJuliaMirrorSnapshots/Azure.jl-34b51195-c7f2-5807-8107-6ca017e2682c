# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct NetworkInterfacePropertiesFormat <: SwaggerModel
    virtualMachine::Any # spec type: Union{ Nothing, SubResource } # spec name: virtualMachine
    networkSecurityGroup::Any # spec type: Union{ Nothing, NetworkSecurityGroup } # spec name: networkSecurityGroup
    ipConfigurations::Any # spec type: Union{ Nothing, Vector{NetworkInterfaceIPConfiguration} } # spec name: ipConfigurations
    dnsSettings::Any # spec type: Union{ Nothing, NetworkInterfaceDnsSettings } # spec name: dnsSettings
    macAddress::Any # spec type: Union{ Nothing, String } # spec name: macAddress
    primary::Any # spec type: Union{ Nothing, Bool } # spec name: primary
    enableAcceleratedNetworking::Any # spec type: Union{ Nothing, Bool } # spec name: enableAcceleratedNetworking
    enableIPForwarding::Any # spec type: Union{ Nothing, Bool } # spec name: enableIPForwarding
    resourceGuid::Any # spec type: Union{ Nothing, String } # spec name: resourceGuid
    provisioningState::Any # spec type: Union{ Nothing, String } # spec name: provisioningState

    function NetworkInterfacePropertiesFormat(;virtualMachine=nothing, networkSecurityGroup=nothing, ipConfigurations=nothing, dnsSettings=nothing, macAddress=nothing, primary=nothing, enableAcceleratedNetworking=nothing, enableIPForwarding=nothing, resourceGuid=nothing, provisioningState=nothing)
        o = new()
        validate_property(NetworkInterfacePropertiesFormat, Symbol("virtualMachine"), virtualMachine)
        setfield!(o, Symbol("virtualMachine"), virtualMachine)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("networkSecurityGroup"), networkSecurityGroup)
        setfield!(o, Symbol("networkSecurityGroup"), networkSecurityGroup)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("ipConfigurations"), ipConfigurations)
        setfield!(o, Symbol("ipConfigurations"), ipConfigurations)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("dnsSettings"), dnsSettings)
        setfield!(o, Symbol("dnsSettings"), dnsSettings)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("macAddress"), macAddress)
        setfield!(o, Symbol("macAddress"), macAddress)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("primary"), primary)
        setfield!(o, Symbol("primary"), primary)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("enableAcceleratedNetworking"), enableAcceleratedNetworking)
        setfield!(o, Symbol("enableAcceleratedNetworking"), enableAcceleratedNetworking)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("enableIPForwarding"), enableIPForwarding)
        setfield!(o, Symbol("enableIPForwarding"), enableIPForwarding)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("resourceGuid"), resourceGuid)
        setfield!(o, Symbol("resourceGuid"), resourceGuid)
        validate_property(NetworkInterfacePropertiesFormat, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        o
    end
end # type NetworkInterfacePropertiesFormat

const _property_map_NetworkInterfacePropertiesFormat = Dict{Symbol,Symbol}(Symbol("virtualMachine")=>Symbol("virtualMachine"), Symbol("networkSecurityGroup")=>Symbol("networkSecurityGroup"), Symbol("ipConfigurations")=>Symbol("ipConfigurations"), Symbol("dnsSettings")=>Symbol("dnsSettings"), Symbol("macAddress")=>Symbol("macAddress"), Symbol("primary")=>Symbol("primary"), Symbol("enableAcceleratedNetworking")=>Symbol("enableAcceleratedNetworking"), Symbol("enableIPForwarding")=>Symbol("enableIPForwarding"), Symbol("resourceGuid")=>Symbol("resourceGuid"), Symbol("provisioningState")=>Symbol("provisioningState"))
const _property_types_NetworkInterfacePropertiesFormat = Dict{Symbol,String}(Symbol("virtualMachine")=>"SubResource", Symbol("networkSecurityGroup")=>"NetworkSecurityGroup", Symbol("ipConfigurations")=>"Vector{NetworkInterfaceIPConfiguration}", Symbol("dnsSettings")=>"NetworkInterfaceDnsSettings", Symbol("macAddress")=>"String", Symbol("primary")=>"Bool", Symbol("enableAcceleratedNetworking")=>"Bool", Symbol("enableIPForwarding")=>"Bool", Symbol("resourceGuid")=>"String", Symbol("provisioningState")=>"String")
Base.propertynames(::Type{ NetworkInterfacePropertiesFormat }) = collect(keys(_property_map_NetworkInterfacePropertiesFormat))
Swagger.property_type(::Type{ NetworkInterfacePropertiesFormat }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_NetworkInterfacePropertiesFormat[name]))}
Swagger.field_name(::Type{ NetworkInterfacePropertiesFormat }, property_name::Symbol) =  _property_map_NetworkInterfacePropertiesFormat[property_name]

function check_required(o::NetworkInterfacePropertiesFormat)
    true
end

function validate_property(::Type{ NetworkInterfacePropertiesFormat }, name::Symbol, val)
end
