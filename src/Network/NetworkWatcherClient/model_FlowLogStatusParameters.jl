# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct FlowLogStatusParameters <: SwaggerModel
    targetResourceId::Any # spec type: Union{ Nothing, String } # spec name: targetResourceId

    function FlowLogStatusParameters(;targetResourceId=nothing)
        o = new()
        validate_property(FlowLogStatusParameters, Symbol("targetResourceId"), targetResourceId)
        setfield!(o, Symbol("targetResourceId"), targetResourceId)
        o
    end
end # type FlowLogStatusParameters

const _property_map_FlowLogStatusParameters = Dict{Symbol,Symbol}(Symbol("targetResourceId")=>Symbol("targetResourceId"))
const _property_types_FlowLogStatusParameters = Dict{Symbol,String}(Symbol("targetResourceId")=>"String")
Base.propertynames(::Type{ FlowLogStatusParameters }) = collect(keys(_property_map_FlowLogStatusParameters))
Swagger.property_type(::Type{ FlowLogStatusParameters }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_FlowLogStatusParameters[name]))}
Swagger.field_name(::Type{ FlowLogStatusParameters }, property_name::Symbol) =  _property_map_FlowLogStatusParameters[property_name]

function check_required(o::FlowLogStatusParameters)
    (getproperty(o, Symbol("targetResourceId")) === nothing) && (return false)
    true
end

function validate_property(::Type{ FlowLogStatusParameters }, name::Symbol, val)
end
