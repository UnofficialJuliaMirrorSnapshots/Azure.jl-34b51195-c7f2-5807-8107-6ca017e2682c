# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct SecurityGroupViewResult <: SwaggerModel
    networkInterfaces::Any # spec type: Union{ Nothing, Vector{SecurityGroupNetworkInterface} } # spec name: networkInterfaces

    function SecurityGroupViewResult(;networkInterfaces=nothing)
        o = new()
        validate_property(SecurityGroupViewResult, Symbol("networkInterfaces"), networkInterfaces)
        setfield!(o, Symbol("networkInterfaces"), networkInterfaces)
        o
    end
end # type SecurityGroupViewResult

const _property_map_SecurityGroupViewResult = Dict{Symbol,Symbol}(Symbol("networkInterfaces")=>Symbol("networkInterfaces"))
const _property_types_SecurityGroupViewResult = Dict{Symbol,String}(Symbol("networkInterfaces")=>"Vector{SecurityGroupNetworkInterface}")
Base.propertynames(::Type{ SecurityGroupViewResult }) = collect(keys(_property_map_SecurityGroupViewResult))
Swagger.property_type(::Type{ SecurityGroupViewResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_SecurityGroupViewResult[name]))}
Swagger.field_name(::Type{ SecurityGroupViewResult }, property_name::Symbol) =  _property_map_SecurityGroupViewResult[property_name]

function check_required(o::SecurityGroupViewResult)
    true
end

function validate_property(::Type{ SecurityGroupViewResult }, name::Symbol, val)
end
