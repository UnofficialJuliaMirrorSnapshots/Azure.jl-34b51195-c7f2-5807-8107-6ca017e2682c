# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct SubnetAssociation <: SwaggerModel
    id::Any # spec type: Union{ Nothing, String } # spec name: id
    securityRules::Any # spec type: Union{ Nothing, Vector{SecurityRule} } # spec name: securityRules

    function SubnetAssociation(;id=nothing, securityRules=nothing)
        o = new()
        validate_property(SubnetAssociation, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(SubnetAssociation, Symbol("securityRules"), securityRules)
        setfield!(o, Symbol("securityRules"), securityRules)
        o
    end
end # type SubnetAssociation

const _property_map_SubnetAssociation = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("securityRules")=>Symbol("securityRules"))
const _property_types_SubnetAssociation = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("securityRules")=>"Vector{SecurityRule}")
Base.propertynames(::Type{ SubnetAssociation }) = collect(keys(_property_map_SubnetAssociation))
Swagger.property_type(::Type{ SubnetAssociation }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_SubnetAssociation[name]))}
Swagger.field_name(::Type{ SubnetAssociation }, property_name::Symbol) =  _property_map_SubnetAssociation[property_name]

function check_required(o::SubnetAssociation)
    true
end

function validate_property(::Type{ SubnetAssociation }, name::Symbol, val)
end
