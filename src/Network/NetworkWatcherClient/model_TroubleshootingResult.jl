# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct TroubleshootingResult <: SwaggerModel
    startTime::Any # spec type: Union{ Nothing, DateTime } # spec name: startTime
    endTime::Any # spec type: Union{ Nothing, DateTime } # spec name: endTime
    code::Any # spec type: Union{ Nothing, String } # spec name: code
    results::Any # spec type: Union{ Nothing, Vector{TroubleshootingDetails} } # spec name: results

    function TroubleshootingResult(;startTime=nothing, endTime=nothing, code=nothing, results=nothing)
        o = new()
        validate_property(TroubleshootingResult, Symbol("startTime"), startTime)
        setfield!(o, Symbol("startTime"), startTime)
        validate_property(TroubleshootingResult, Symbol("endTime"), endTime)
        setfield!(o, Symbol("endTime"), endTime)
        validate_property(TroubleshootingResult, Symbol("code"), code)
        setfield!(o, Symbol("code"), code)
        validate_property(TroubleshootingResult, Symbol("results"), results)
        setfield!(o, Symbol("results"), results)
        o
    end
end # type TroubleshootingResult

const _property_map_TroubleshootingResult = Dict{Symbol,Symbol}(Symbol("startTime")=>Symbol("startTime"), Symbol("endTime")=>Symbol("endTime"), Symbol("code")=>Symbol("code"), Symbol("results")=>Symbol("results"))
const _property_types_TroubleshootingResult = Dict{Symbol,String}(Symbol("startTime")=>"DateTime", Symbol("endTime")=>"DateTime", Symbol("code")=>"String", Symbol("results")=>"Vector{TroubleshootingDetails}")
Base.propertynames(::Type{ TroubleshootingResult }) = collect(keys(_property_map_TroubleshootingResult))
Swagger.property_type(::Type{ TroubleshootingResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_TroubleshootingResult[name]))}
Swagger.field_name(::Type{ TroubleshootingResult }, property_name::Symbol) =  _property_map_TroubleshootingResult[property_name]

function check_required(o::TroubleshootingResult)
    true
end

function validate_property(::Type{ TroubleshootingResult }, name::Symbol, val)
end
