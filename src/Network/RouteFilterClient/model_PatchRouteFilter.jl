# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct PatchRouteFilter <: SwaggerModel
    id::Any # spec type: Union{ Nothing, String } # spec name: id

    function PatchRouteFilter(;id=nothing)
        o = new()
        validate_property(PatchRouteFilter, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        o
    end
end # type PatchRouteFilter

const _property_map_PatchRouteFilter = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"))
const _property_types_PatchRouteFilter = Dict{Symbol,String}(Symbol("id")=>"String")
Base.propertynames(::Type{ PatchRouteFilter }) = collect(keys(_property_map_PatchRouteFilter))
Swagger.property_type(::Type{ PatchRouteFilter }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_PatchRouteFilter[name]))}
Swagger.field_name(::Type{ PatchRouteFilter }, property_name::Symbol) =  _property_map_PatchRouteFilter[property_name]

function check_required(o::PatchRouteFilter)
    true
end

function validate_property(::Type{ PatchRouteFilter }, name::Symbol, val)
end
