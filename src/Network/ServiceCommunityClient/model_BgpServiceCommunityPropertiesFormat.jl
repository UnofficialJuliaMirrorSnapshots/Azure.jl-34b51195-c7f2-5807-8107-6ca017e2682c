# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct BgpServiceCommunityPropertiesFormat <: SwaggerModel
    serviceName::Any # spec type: Union{ Nothing, String } # spec name: serviceName
    bgpCommunities::Any # spec type: Union{ Nothing, Vector{BGPCommunity} } # spec name: bgpCommunities

    function BgpServiceCommunityPropertiesFormat(;serviceName=nothing, bgpCommunities=nothing)
        o = new()
        validate_property(BgpServiceCommunityPropertiesFormat, Symbol("serviceName"), serviceName)
        setfield!(o, Symbol("serviceName"), serviceName)
        validate_property(BgpServiceCommunityPropertiesFormat, Symbol("bgpCommunities"), bgpCommunities)
        setfield!(o, Symbol("bgpCommunities"), bgpCommunities)
        o
    end
end # type BgpServiceCommunityPropertiesFormat

const _property_map_BgpServiceCommunityPropertiesFormat = Dict{Symbol,Symbol}(Symbol("serviceName")=>Symbol("serviceName"), Symbol("bgpCommunities")=>Symbol("bgpCommunities"))
const _property_types_BgpServiceCommunityPropertiesFormat = Dict{Symbol,String}(Symbol("serviceName")=>"String", Symbol("bgpCommunities")=>"Vector{BGPCommunity}")
Base.propertynames(::Type{ BgpServiceCommunityPropertiesFormat }) = collect(keys(_property_map_BgpServiceCommunityPropertiesFormat))
Swagger.property_type(::Type{ BgpServiceCommunityPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_BgpServiceCommunityPropertiesFormat[name]))}
Swagger.field_name(::Type{ BgpServiceCommunityPropertiesFormat }, property_name::Symbol) =  _property_map_BgpServiceCommunityPropertiesFormat[property_name]

function check_required(o::BgpServiceCommunityPropertiesFormat)
    true
end

function validate_property(::Type{ BgpServiceCommunityPropertiesFormat }, name::Symbol, val)
end
