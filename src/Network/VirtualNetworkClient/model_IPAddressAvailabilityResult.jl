# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct IPAddressAvailabilityResult <: SwaggerModel
    available::Any # spec type: Union{ Nothing, Bool } # spec name: available
    availableIPAddresses::Any # spec type: Union{ Nothing, Vector{String} } # spec name: availableIPAddresses

    function IPAddressAvailabilityResult(;available=nothing, availableIPAddresses=nothing)
        o = new()
        validate_property(IPAddressAvailabilityResult, Symbol("available"), available)
        setfield!(o, Symbol("available"), available)
        validate_property(IPAddressAvailabilityResult, Symbol("availableIPAddresses"), availableIPAddresses)
        setfield!(o, Symbol("availableIPAddresses"), availableIPAddresses)
        o
    end
end # type IPAddressAvailabilityResult

const _property_map_IPAddressAvailabilityResult = Dict{Symbol,Symbol}(Symbol("available")=>Symbol("available"), Symbol("availableIPAddresses")=>Symbol("availableIPAddresses"))
const _property_types_IPAddressAvailabilityResult = Dict{Symbol,String}(Symbol("available")=>"Bool", Symbol("availableIPAddresses")=>"Vector{String}")
Base.propertynames(::Type{ IPAddressAvailabilityResult }) = collect(keys(_property_map_IPAddressAvailabilityResult))
Swagger.property_type(::Type{ IPAddressAvailabilityResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_IPAddressAvailabilityResult[name]))}
Swagger.field_name(::Type{ IPAddressAvailabilityResult }, property_name::Symbol) =  _property_map_IPAddressAvailabilityResult[property_name]

function check_required(o::IPAddressAvailabilityResult)
    true
end

function validate_property(::Type{ IPAddressAvailabilityResult }, name::Symbol, val)
end
