# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct SubnetPropertiesFormat <: SwaggerModel
    addressPrefix::Any # spec type: Union{ Nothing, String } # spec name: addressPrefix
    networkSecurityGroup::Any # spec type: Union{ Nothing, NetworkSecurityGroup } # spec name: networkSecurityGroup
    routeTable::Any # spec type: Union{ Nothing, RouteTable } # spec name: routeTable
    ipConfigurations::Any # spec type: Union{ Nothing, Vector{IPConfiguration} } # spec name: ipConfigurations
    resourceNavigationLinks::Any # spec type: Union{ Nothing, Vector{ResourceNavigationLink} } # spec name: resourceNavigationLinks
    provisioningState::Any # spec type: Union{ Nothing, String } # spec name: provisioningState

    function SubnetPropertiesFormat(;addressPrefix=nothing, networkSecurityGroup=nothing, routeTable=nothing, ipConfigurations=nothing, resourceNavigationLinks=nothing, provisioningState=nothing)
        o = new()
        validate_property(SubnetPropertiesFormat, Symbol("addressPrefix"), addressPrefix)
        setfield!(o, Symbol("addressPrefix"), addressPrefix)
        validate_property(SubnetPropertiesFormat, Symbol("networkSecurityGroup"), networkSecurityGroup)
        setfield!(o, Symbol("networkSecurityGroup"), networkSecurityGroup)
        validate_property(SubnetPropertiesFormat, Symbol("routeTable"), routeTable)
        setfield!(o, Symbol("routeTable"), routeTable)
        validate_property(SubnetPropertiesFormat, Symbol("ipConfigurations"), ipConfigurations)
        setfield!(o, Symbol("ipConfigurations"), ipConfigurations)
        validate_property(SubnetPropertiesFormat, Symbol("resourceNavigationLinks"), resourceNavigationLinks)
        setfield!(o, Symbol("resourceNavigationLinks"), resourceNavigationLinks)
        validate_property(SubnetPropertiesFormat, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        o
    end
end # type SubnetPropertiesFormat

const _property_map_SubnetPropertiesFormat = Dict{Symbol,Symbol}(Symbol("addressPrefix")=>Symbol("addressPrefix"), Symbol("networkSecurityGroup")=>Symbol("networkSecurityGroup"), Symbol("routeTable")=>Symbol("routeTable"), Symbol("ipConfigurations")=>Symbol("ipConfigurations"), Symbol("resourceNavigationLinks")=>Symbol("resourceNavigationLinks"), Symbol("provisioningState")=>Symbol("provisioningState"))
const _property_types_SubnetPropertiesFormat = Dict{Symbol,String}(Symbol("addressPrefix")=>"String", Symbol("networkSecurityGroup")=>"NetworkSecurityGroup", Symbol("routeTable")=>"RouteTable", Symbol("ipConfigurations")=>"Vector{IPConfiguration}", Symbol("resourceNavigationLinks")=>"Vector{ResourceNavigationLink}", Symbol("provisioningState")=>"String")
Base.propertynames(::Type{ SubnetPropertiesFormat }) = collect(keys(_property_map_SubnetPropertiesFormat))
Swagger.property_type(::Type{ SubnetPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_SubnetPropertiesFormat[name]))}
Swagger.field_name(::Type{ SubnetPropertiesFormat }, property_name::Symbol) =  _property_map_SubnetPropertiesFormat[property_name]

function check_required(o::SubnetPropertiesFormat)
    true
end

function validate_property(::Type{ SubnetPropertiesFormat }, name::Symbol, val)
end
