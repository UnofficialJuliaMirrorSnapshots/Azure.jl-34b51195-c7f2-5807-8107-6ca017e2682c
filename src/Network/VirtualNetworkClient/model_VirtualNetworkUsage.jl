# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct VirtualNetworkUsage <: SwaggerModel
    currentValue::Any # spec type: Union{ Nothing, Float64 } # spec name: currentValue
    id::Any # spec type: Union{ Nothing, String } # spec name: id
    limit::Any # spec type: Union{ Nothing, Float64 } # spec name: limit
    name::Any # spec type: Union{ Nothing, VirtualNetworkUsageName } # spec name: name
    unit::Any # spec type: Union{ Nothing, String } # spec name: unit

    function VirtualNetworkUsage(;currentValue=nothing, id=nothing, limit=nothing, name=nothing, unit=nothing)
        o = new()
        validate_property(VirtualNetworkUsage, Symbol("currentValue"), currentValue)
        setfield!(o, Symbol("currentValue"), currentValue)
        validate_property(VirtualNetworkUsage, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(VirtualNetworkUsage, Symbol("limit"), limit)
        setfield!(o, Symbol("limit"), limit)
        validate_property(VirtualNetworkUsage, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(VirtualNetworkUsage, Symbol("unit"), unit)
        setfield!(o, Symbol("unit"), unit)
        o
    end
end # type VirtualNetworkUsage

const _property_map_VirtualNetworkUsage = Dict{Symbol,Symbol}(Symbol("currentValue")=>Symbol("currentValue"), Symbol("id")=>Symbol("id"), Symbol("limit")=>Symbol("limit"), Symbol("name")=>Symbol("name"), Symbol("unit")=>Symbol("unit"))
const _property_types_VirtualNetworkUsage = Dict{Symbol,String}(Symbol("currentValue")=>"Float64", Symbol("id")=>"String", Symbol("limit")=>"Float64", Symbol("name")=>"VirtualNetworkUsageName", Symbol("unit")=>"String")
Base.propertynames(::Type{ VirtualNetworkUsage }) = collect(keys(_property_map_VirtualNetworkUsage))
Swagger.property_type(::Type{ VirtualNetworkUsage }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_VirtualNetworkUsage[name]))}
Swagger.field_name(::Type{ VirtualNetworkUsage }, property_name::Symbol) =  _property_map_VirtualNetworkUsage[property_name]

function check_required(o::VirtualNetworkUsage)
    true
end

function validate_property(::Type{ VirtualNetworkUsage }, name::Symbol, val)
end
