# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct Deployment <: SwaggerModel
    properties::Any # spec type: Union{ Nothing, DeploymentProperties } # spec name: properties

    function Deployment(;properties=nothing)
        o = new()
        validate_property(Deployment, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type Deployment

const _property_map_Deployment = Dict{Symbol,Symbol}(Symbol("properties")=>Symbol("properties"))
const _property_types_Deployment = Dict{Symbol,String}(Symbol("properties")=>"DeploymentProperties")
Base.propertynames(::Type{ Deployment }) = collect(keys(_property_map_Deployment))
Swagger.property_type(::Type{ Deployment }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_Deployment[name]))}
Swagger.field_name(::Type{ Deployment }, property_name::Symbol) =  _property_map_Deployment[property_name]

function check_required(o::Deployment)
    (getproperty(o, Symbol("properties")) === nothing) && (return false)
    true
end

function validate_property(::Type{ Deployment }, name::Symbol, val)
end
