# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct DeploymentListResult <: SwaggerModel
    value::Any # spec type: Union{ Nothing, Vector{DeploymentExtended} } # spec name: value
    nextLink::Any # spec type: Union{ Nothing, String } # spec name: nextLink

    function DeploymentListResult(;value=nothing, nextLink=nothing)
        o = new()
        validate_property(DeploymentListResult, Symbol("value"), value)
        setfield!(o, Symbol("value"), value)
        validate_property(DeploymentListResult, Symbol("nextLink"), nextLink)
        setfield!(o, Symbol("nextLink"), nextLink)
        o
    end
end # type DeploymentListResult

const _property_map_DeploymentListResult = Dict{Symbol,Symbol}(Symbol("value")=>Symbol("value"), Symbol("nextLink")=>Symbol("nextLink"))
const _property_types_DeploymentListResult = Dict{Symbol,String}(Symbol("value")=>"Vector{DeploymentExtended}", Symbol("nextLink")=>"String")
Base.propertynames(::Type{ DeploymentListResult }) = collect(keys(_property_map_DeploymentListResult))
Swagger.property_type(::Type{ DeploymentListResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_DeploymentListResult[name]))}
Swagger.field_name(::Type{ DeploymentListResult }, property_name::Symbol) =  _property_map_DeploymentListResult[property_name]

function check_required(o::DeploymentListResult)
    true
end

function validate_property(::Type{ DeploymentListResult }, name::Symbol, val)
end
