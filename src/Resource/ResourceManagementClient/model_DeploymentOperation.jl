# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct DeploymentOperation <: SwaggerModel
    id::Any # spec type: Union{ Nothing, String } # spec name: id
    operationId::Any # spec type: Union{ Nothing, String } # spec name: operationId
    properties::Any # spec type: Union{ Nothing, DeploymentOperationProperties } # spec name: properties

    function DeploymentOperation(;id=nothing, operationId=nothing, properties=nothing)
        o = new()
        validate_property(DeploymentOperation, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(DeploymentOperation, Symbol("operationId"), operationId)
        setfield!(o, Symbol("operationId"), operationId)
        validate_property(DeploymentOperation, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type DeploymentOperation

const _property_map_DeploymentOperation = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("operationId")=>Symbol("operationId"), Symbol("properties")=>Symbol("properties"))
const _property_types_DeploymentOperation = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("operationId")=>"String", Symbol("properties")=>"DeploymentOperationProperties")
Base.propertynames(::Type{ DeploymentOperation }) = collect(keys(_property_map_DeploymentOperation))
Swagger.property_type(::Type{ DeploymentOperation }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_DeploymentOperation[name]))}
Swagger.field_name(::Type{ DeploymentOperation }, property_name::Symbol) =  _property_map_DeploymentOperation[property_name]

function check_required(o::DeploymentOperation)
    true
end

function validate_property(::Type{ DeploymentOperation }, name::Symbol, val)
end
