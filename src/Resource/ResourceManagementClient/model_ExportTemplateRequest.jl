# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ExportTemplateRequest <: SwaggerModel
    resources::Any # spec type: Union{ Nothing, Vector{String} } # spec name: resources
    options::Any # spec type: Union{ Nothing, String } # spec name: options

    function ExportTemplateRequest(;resources=nothing, options=nothing)
        o = new()
        validate_property(ExportTemplateRequest, Symbol("resources"), resources)
        setfield!(o, Symbol("resources"), resources)
        validate_property(ExportTemplateRequest, Symbol("options"), options)
        setfield!(o, Symbol("options"), options)
        o
    end
end # type ExportTemplateRequest

const _property_map_ExportTemplateRequest = Dict{Symbol,Symbol}(Symbol("resources")=>Symbol("resources"), Symbol("options")=>Symbol("options"))
const _property_types_ExportTemplateRequest = Dict{Symbol,String}(Symbol("resources")=>"Vector{String}", Symbol("options")=>"String")
Base.propertynames(::Type{ ExportTemplateRequest }) = collect(keys(_property_map_ExportTemplateRequest))
Swagger.property_type(::Type{ ExportTemplateRequest }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ExportTemplateRequest[name]))}
Swagger.field_name(::Type{ ExportTemplateRequest }, property_name::Symbol) =  _property_map_ExportTemplateRequest[property_name]

function check_required(o::ExportTemplateRequest)
    true
end

function validate_property(::Type{ ExportTemplateRequest }, name::Symbol, val)
end
