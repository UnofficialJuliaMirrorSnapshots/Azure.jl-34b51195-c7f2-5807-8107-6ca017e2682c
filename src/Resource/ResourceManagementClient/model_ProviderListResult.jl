# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ProviderListResult <: SwaggerModel
    value::Any # spec type: Union{ Nothing, Vector{Provider} } # spec name: value
    nextLink::Any # spec type: Union{ Nothing, String } # spec name: nextLink

    function ProviderListResult(;value=nothing, nextLink=nothing)
        o = new()
        validate_property(ProviderListResult, Symbol("value"), value)
        setfield!(o, Symbol("value"), value)
        validate_property(ProviderListResult, Symbol("nextLink"), nextLink)
        setfield!(o, Symbol("nextLink"), nextLink)
        o
    end
end # type ProviderListResult

const _property_map_ProviderListResult = Dict{Symbol,Symbol}(Symbol("value")=>Symbol("value"), Symbol("nextLink")=>Symbol("nextLink"))
const _property_types_ProviderListResult = Dict{Symbol,String}(Symbol("value")=>"Vector{Provider}", Symbol("nextLink")=>"String")
Base.propertynames(::Type{ ProviderListResult }) = collect(keys(_property_map_ProviderListResult))
Swagger.property_type(::Type{ ProviderListResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ProviderListResult[name]))}
Swagger.field_name(::Type{ ProviderListResult }, property_name::Symbol) =  _property_map_ProviderListResult[property_name]

function check_required(o::ProviderListResult)
    true
end

function validate_property(::Type{ ProviderListResult }, name::Symbol, val)
end
