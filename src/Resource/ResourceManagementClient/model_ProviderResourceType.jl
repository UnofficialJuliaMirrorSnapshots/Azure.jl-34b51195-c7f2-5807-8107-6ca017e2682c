# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ProviderResourceType <: SwaggerModel
    resourceType::Any # spec type: Union{ Nothing, String } # spec name: resourceType
    locations::Any # spec type: Union{ Nothing, Vector{String} } # spec name: locations
    aliases::Any # spec type: Union{ Nothing, Vector{AliasType} } # spec name: aliases
    apiVersions::Any # spec type: Union{ Nothing, Vector{String} } # spec name: apiVersions
    properties::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: properties

    function ProviderResourceType(;resourceType=nothing, locations=nothing, aliases=nothing, apiVersions=nothing, properties=nothing)
        o = new()
        validate_property(ProviderResourceType, Symbol("resourceType"), resourceType)
        setfield!(o, Symbol("resourceType"), resourceType)
        validate_property(ProviderResourceType, Symbol("locations"), locations)
        setfield!(o, Symbol("locations"), locations)
        validate_property(ProviderResourceType, Symbol("aliases"), aliases)
        setfield!(o, Symbol("aliases"), aliases)
        validate_property(ProviderResourceType, Symbol("apiVersions"), apiVersions)
        setfield!(o, Symbol("apiVersions"), apiVersions)
        validate_property(ProviderResourceType, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type ProviderResourceType

const _property_map_ProviderResourceType = Dict{Symbol,Symbol}(Symbol("resourceType")=>Symbol("resourceType"), Symbol("locations")=>Symbol("locations"), Symbol("aliases")=>Symbol("aliases"), Symbol("apiVersions")=>Symbol("apiVersions"), Symbol("properties")=>Symbol("properties"))
const _property_types_ProviderResourceType = Dict{Symbol,String}(Symbol("resourceType")=>"String", Symbol("locations")=>"Vector{String}", Symbol("aliases")=>"Vector{AliasType}", Symbol("apiVersions")=>"Vector{String}", Symbol("properties")=>"Dict{String, String}")
Base.propertynames(::Type{ ProviderResourceType }) = collect(keys(_property_map_ProviderResourceType))
Swagger.property_type(::Type{ ProviderResourceType }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ProviderResourceType[name]))}
Swagger.field_name(::Type{ ProviderResourceType }, property_name::Symbol) =  _property_map_ProviderResourceType[property_name]

function check_required(o::ProviderResourceType)
    true
end

function validate_property(::Type{ ProviderResourceType }, name::Symbol, val)
end
