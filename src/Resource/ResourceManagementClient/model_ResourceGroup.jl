# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ResourceGroup <: SwaggerModel
    id::Any # spec type: Union{ Nothing, String } # spec name: id
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    properties::Any # spec type: Union{ Nothing, ResourceGroupProperties } # spec name: properties
    location::Any # spec type: Union{ Nothing, String } # spec name: location
    managedBy::Any # spec type: Union{ Nothing, String } # spec name: managedBy
    tags::Any # spec type: Union{ Nothing, Dict{String, String} } # spec name: tags

    function ResourceGroup(;id=nothing, name=nothing, properties=nothing, location=nothing, managedBy=nothing, tags=nothing)
        o = new()
        validate_property(ResourceGroup, Symbol("id"), id)
        setfield!(o, Symbol("id"), id)
        validate_property(ResourceGroup, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(ResourceGroup, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        validate_property(ResourceGroup, Symbol("location"), location)
        setfield!(o, Symbol("location"), location)
        validate_property(ResourceGroup, Symbol("managedBy"), managedBy)
        setfield!(o, Symbol("managedBy"), managedBy)
        validate_property(ResourceGroup, Symbol("tags"), tags)
        setfield!(o, Symbol("tags"), tags)
        o
    end
end # type ResourceGroup

const _property_map_ResourceGroup = Dict{Symbol,Symbol}(Symbol("id")=>Symbol("id"), Symbol("name")=>Symbol("name"), Symbol("properties")=>Symbol("properties"), Symbol("location")=>Symbol("location"), Symbol("managedBy")=>Symbol("managedBy"), Symbol("tags")=>Symbol("tags"))
const _property_types_ResourceGroup = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("properties")=>"ResourceGroupProperties", Symbol("location")=>"String", Symbol("managedBy")=>"String", Symbol("tags")=>"Dict{String, String}")
Base.propertynames(::Type{ ResourceGroup }) = collect(keys(_property_map_ResourceGroup))
Swagger.property_type(::Type{ ResourceGroup }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ResourceGroup[name]))}
Swagger.field_name(::Type{ ResourceGroup }, property_name::Symbol) =  _property_map_ResourceGroup[property_name]

function check_required(o::ResourceGroup)
    (getproperty(o, Symbol("location")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ResourceGroup }, name::Symbol, val)
end
