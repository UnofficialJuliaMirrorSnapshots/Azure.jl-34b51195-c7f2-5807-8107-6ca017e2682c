# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ResourceGroupExportResult <: SwaggerModel
    template::Any # spec type: Union{ Nothing, Any } # spec name: template
    error::Any # spec type: Union{ Nothing, ResourceManagementErrorWithDetails } # spec name: error

    function ResourceGroupExportResult(;template=nothing, error=nothing)
        o = new()
        validate_property(ResourceGroupExportResult, Symbol("template"), template)
        setfield!(o, Symbol("template"), template)
        validate_property(ResourceGroupExportResult, Symbol("error"), error)
        setfield!(o, Symbol("error"), error)
        o
    end
end # type ResourceGroupExportResult

const _property_map_ResourceGroupExportResult = Dict{Symbol,Symbol}(Symbol("template")=>Symbol("template"), Symbol("error")=>Symbol("error"))
const _property_types_ResourceGroupExportResult = Dict{Symbol,String}(Symbol("template")=>"Any", Symbol("error")=>"ResourceManagementErrorWithDetails")
Base.propertynames(::Type{ ResourceGroupExportResult }) = collect(keys(_property_map_ResourceGroupExportResult))
Swagger.property_type(::Type{ ResourceGroupExportResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ResourceGroupExportResult[name]))}
Swagger.field_name(::Type{ ResourceGroupExportResult }, property_name::Symbol) =  _property_map_ResourceGroupExportResult[property_name]

function check_required(o::ResourceGroupExportResult)
    true
end

function validate_property(::Type{ ResourceGroupExportResult }, name::Symbol, val)
end
