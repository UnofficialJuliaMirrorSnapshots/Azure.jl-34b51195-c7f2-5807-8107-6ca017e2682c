# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ResourceGroupFilter <: SwaggerModel
    tagName::Any # spec type: Union{ Nothing, String } # spec name: tagName
    tagValue::Any # spec type: Union{ Nothing, String } # spec name: tagValue

    function ResourceGroupFilter(;tagName=nothing, tagValue=nothing)
        o = new()
        validate_property(ResourceGroupFilter, Symbol("tagName"), tagName)
        setfield!(o, Symbol("tagName"), tagName)
        validate_property(ResourceGroupFilter, Symbol("tagValue"), tagValue)
        setfield!(o, Symbol("tagValue"), tagValue)
        o
    end
end # type ResourceGroupFilter

const _property_map_ResourceGroupFilter = Dict{Symbol,Symbol}(Symbol("tagName")=>Symbol("tagName"), Symbol("tagValue")=>Symbol("tagValue"))
const _property_types_ResourceGroupFilter = Dict{Symbol,String}(Symbol("tagName")=>"String", Symbol("tagValue")=>"String")
Base.propertynames(::Type{ ResourceGroupFilter }) = collect(keys(_property_map_ResourceGroupFilter))
Swagger.property_type(::Type{ ResourceGroupFilter }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ResourceGroupFilter[name]))}
Swagger.field_name(::Type{ ResourceGroupFilter }, property_name::Symbol) =  _property_map_ResourceGroupFilter[property_name]

function check_required(o::ResourceGroupFilter)
    true
end

function validate_property(::Type{ ResourceGroupFilter }, name::Symbol, val)
end
