# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ResourcesMoveInfo <: SwaggerModel
    resources::Any # spec type: Union{ Nothing, Vector{String} } # spec name: resources
    targetResourceGroup::Any # spec type: Union{ Nothing, String } # spec name: targetResourceGroup

    function ResourcesMoveInfo(;resources=nothing, targetResourceGroup=nothing)
        o = new()
        validate_property(ResourcesMoveInfo, Symbol("resources"), resources)
        setfield!(o, Symbol("resources"), resources)
        validate_property(ResourcesMoveInfo, Symbol("targetResourceGroup"), targetResourceGroup)
        setfield!(o, Symbol("targetResourceGroup"), targetResourceGroup)
        o
    end
end # type ResourcesMoveInfo

const _property_map_ResourcesMoveInfo = Dict{Symbol,Symbol}(Symbol("resources")=>Symbol("resources"), Symbol("targetResourceGroup")=>Symbol("targetResourceGroup"))
const _property_types_ResourcesMoveInfo = Dict{Symbol,String}(Symbol("resources")=>"Vector{String}", Symbol("targetResourceGroup")=>"String")
Base.propertynames(::Type{ ResourcesMoveInfo }) = collect(keys(_property_map_ResourcesMoveInfo))
Swagger.property_type(::Type{ ResourcesMoveInfo }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ResourcesMoveInfo[name]))}
Swagger.field_name(::Type{ ResourcesMoveInfo }, property_name::Symbol) =  _property_map_ResourcesMoveInfo[property_name]

function check_required(o::ResourcesMoveInfo)
    true
end

function validate_property(::Type{ ResourcesMoveInfo }, name::Symbol, val)
end
