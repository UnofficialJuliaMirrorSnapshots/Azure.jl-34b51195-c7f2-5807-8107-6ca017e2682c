# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct Operation <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    display::Any # spec type: Union{ Nothing, OperationDisplay } # spec name: display
    origin::Any # spec type: Union{ Nothing, String } # spec name: origin
    properties::Any # spec type: Union{ Nothing, OperationProperties } # spec name: properties

    function Operation(;name=nothing, display=nothing, origin=nothing, properties=nothing)
        o = new()
        validate_property(Operation, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(Operation, Symbol("display"), display)
        setfield!(o, Symbol("display"), display)
        validate_property(Operation, Symbol("origin"), origin)
        setfield!(o, Symbol("origin"), origin)
        validate_property(Operation, Symbol("properties"), properties)
        setfield!(o, Symbol("properties"), properties)
        o
    end
end # type Operation

const _property_map_Operation = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"), Symbol("display")=>Symbol("display"), Symbol("origin")=>Symbol("origin"), Symbol("properties")=>Symbol("properties"))
const _property_types_Operation = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("display")=>"OperationDisplay", Symbol("origin")=>"String", Symbol("properties")=>"OperationProperties")
Base.propertynames(::Type{ Operation }) = collect(keys(_property_map_Operation))
Swagger.property_type(::Type{ Operation }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_Operation[name]))}
Swagger.field_name(::Type{ Operation }, property_name::Symbol) =  _property_map_Operation[property_name]

function check_required(o::Operation)
    true
end

function validate_property(::Type{ Operation }, name::Symbol, val)
end
