# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct ServiceSasParameters <: SwaggerModel
    canonicalizedResource::Any # spec type: Union{ Nothing, String } # spec name: canonicalizedResource
    signedResource::Any # spec type: Union{ Nothing, String } # spec name: signedResource
    signedPermission::Any # spec type: Union{ Nothing, String } # spec name: signedPermission
    signedIp::Any # spec type: Union{ Nothing, String } # spec name: signedIp
    signedProtocol::Any # spec type: Union{ Nothing, String } # spec name: signedProtocol
    signedStart::Any # spec type: Union{ Nothing, DateTime } # spec name: signedStart
    signedExpiry::Any # spec type: Union{ Nothing, DateTime } # spec name: signedExpiry
    signedIdentifier::Any # spec type: Union{ Nothing, String } # spec name: signedIdentifier
    startPk::Any # spec type: Union{ Nothing, String } # spec name: startPk
    endPk::Any # spec type: Union{ Nothing, String } # spec name: endPk
    startRk::Any # spec type: Union{ Nothing, String } # spec name: startRk
    endRk::Any # spec type: Union{ Nothing, String } # spec name: endRk
    keyToSign::Any # spec type: Union{ Nothing, String } # spec name: keyToSign
    rscc::Any # spec type: Union{ Nothing, String } # spec name: rscc
    rscd::Any # spec type: Union{ Nothing, String } # spec name: rscd
    rsce::Any # spec type: Union{ Nothing, String } # spec name: rsce
    rscl::Any # spec type: Union{ Nothing, String } # spec name: rscl
    rsct::Any # spec type: Union{ Nothing, String } # spec name: rsct

    function ServiceSasParameters(;canonicalizedResource=nothing, signedResource=nothing, signedPermission=nothing, signedIp=nothing, signedProtocol=nothing, signedStart=nothing, signedExpiry=nothing, signedIdentifier=nothing, startPk=nothing, endPk=nothing, startRk=nothing, endRk=nothing, keyToSign=nothing, rscc=nothing, rscd=nothing, rsce=nothing, rscl=nothing, rsct=nothing)
        o = new()
        validate_property(ServiceSasParameters, Symbol("canonicalizedResource"), canonicalizedResource)
        setfield!(o, Symbol("canonicalizedResource"), canonicalizedResource)
        validate_property(ServiceSasParameters, Symbol("signedResource"), signedResource)
        setfield!(o, Symbol("signedResource"), signedResource)
        validate_property(ServiceSasParameters, Symbol("signedPermission"), signedPermission)
        setfield!(o, Symbol("signedPermission"), signedPermission)
        validate_property(ServiceSasParameters, Symbol("signedIp"), signedIp)
        setfield!(o, Symbol("signedIp"), signedIp)
        validate_property(ServiceSasParameters, Symbol("signedProtocol"), signedProtocol)
        setfield!(o, Symbol("signedProtocol"), signedProtocol)
        validate_property(ServiceSasParameters, Symbol("signedStart"), signedStart)
        setfield!(o, Symbol("signedStart"), signedStart)
        validate_property(ServiceSasParameters, Symbol("signedExpiry"), signedExpiry)
        setfield!(o, Symbol("signedExpiry"), signedExpiry)
        validate_property(ServiceSasParameters, Symbol("signedIdentifier"), signedIdentifier)
        setfield!(o, Symbol("signedIdentifier"), signedIdentifier)
        validate_property(ServiceSasParameters, Symbol("startPk"), startPk)
        setfield!(o, Symbol("startPk"), startPk)
        validate_property(ServiceSasParameters, Symbol("endPk"), endPk)
        setfield!(o, Symbol("endPk"), endPk)
        validate_property(ServiceSasParameters, Symbol("startRk"), startRk)
        setfield!(o, Symbol("startRk"), startRk)
        validate_property(ServiceSasParameters, Symbol("endRk"), endRk)
        setfield!(o, Symbol("endRk"), endRk)
        validate_property(ServiceSasParameters, Symbol("keyToSign"), keyToSign)
        setfield!(o, Symbol("keyToSign"), keyToSign)
        validate_property(ServiceSasParameters, Symbol("rscc"), rscc)
        setfield!(o, Symbol("rscc"), rscc)
        validate_property(ServiceSasParameters, Symbol("rscd"), rscd)
        setfield!(o, Symbol("rscd"), rscd)
        validate_property(ServiceSasParameters, Symbol("rsce"), rsce)
        setfield!(o, Symbol("rsce"), rsce)
        validate_property(ServiceSasParameters, Symbol("rscl"), rscl)
        setfield!(o, Symbol("rscl"), rscl)
        validate_property(ServiceSasParameters, Symbol("rsct"), rsct)
        setfield!(o, Symbol("rsct"), rsct)
        o
    end
end # type ServiceSasParameters

const _property_map_ServiceSasParameters = Dict{Symbol,Symbol}(Symbol("canonicalizedResource")=>Symbol("canonicalizedResource"), Symbol("signedResource")=>Symbol("signedResource"), Symbol("signedPermission")=>Symbol("signedPermission"), Symbol("signedIp")=>Symbol("signedIp"), Symbol("signedProtocol")=>Symbol("signedProtocol"), Symbol("signedStart")=>Symbol("signedStart"), Symbol("signedExpiry")=>Symbol("signedExpiry"), Symbol("signedIdentifier")=>Symbol("signedIdentifier"), Symbol("startPk")=>Symbol("startPk"), Symbol("endPk")=>Symbol("endPk"), Symbol("startRk")=>Symbol("startRk"), Symbol("endRk")=>Symbol("endRk"), Symbol("keyToSign")=>Symbol("keyToSign"), Symbol("rscc")=>Symbol("rscc"), Symbol("rscd")=>Symbol("rscd"), Symbol("rsce")=>Symbol("rsce"), Symbol("rscl")=>Symbol("rscl"), Symbol("rsct")=>Symbol("rsct"))
const _property_types_ServiceSasParameters = Dict{Symbol,String}(Symbol("canonicalizedResource")=>"String", Symbol("signedResource")=>"String", Symbol("signedPermission")=>"String", Symbol("signedIp")=>"String", Symbol("signedProtocol")=>"String", Symbol("signedStart")=>"DateTime", Symbol("signedExpiry")=>"DateTime", Symbol("signedIdentifier")=>"String", Symbol("startPk")=>"String", Symbol("endPk")=>"String", Symbol("startRk")=>"String", Symbol("endRk")=>"String", Symbol("keyToSign")=>"String", Symbol("rscc")=>"String", Symbol("rscd")=>"String", Symbol("rsce")=>"String", Symbol("rscl")=>"String", Symbol("rsct")=>"String")
Base.propertynames(::Type{ ServiceSasParameters }) = collect(keys(_property_map_ServiceSasParameters))
Swagger.property_type(::Type{ ServiceSasParameters }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_ServiceSasParameters[name]))}
Swagger.field_name(::Type{ ServiceSasParameters }, property_name::Symbol) =  _property_map_ServiceSasParameters[property_name]

const _allowed_ServiceSasParameters_signedResource = ["b", "c", "f", "s"]

const _allowed_ServiceSasParameters_signedPermission = ["r", "d", "w", "l", "a", "c", "u", "p"]

const _allowed_ServiceSasParameters_signedProtocol = ["https,http", "https"]

function check_required(o::ServiceSasParameters)
    (getproperty(o, Symbol("canonicalizedResource")) === nothing) && (return false)
    true
end

function validate_property(::Type{ ServiceSasParameters }, name::Symbol, val)
    if name === Symbol("signedResource")
        Swagger.validate_param(name, "ServiceSasParameters", :enum, val, _allowed_ServiceSasParameters_signedResource)
    end
    if name === Symbol("signedPermission")
        Swagger.validate_param(name, "ServiceSasParameters", :enum, val, _allowed_ServiceSasParameters_signedPermission)
    end
    if name === Symbol("signedProtocol")
        Swagger.validate_param(name, "ServiceSasParameters", :enum, val, _allowed_ServiceSasParameters_signedProtocol)
    end
    if name === Symbol("signedIdentifier")
        Swagger.validate_param(name, "ServiceSasParameters", :maxLength, val, 64)
    end
end
