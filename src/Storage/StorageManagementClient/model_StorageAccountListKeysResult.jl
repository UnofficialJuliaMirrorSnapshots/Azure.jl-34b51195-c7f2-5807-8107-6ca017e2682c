# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct StorageAccountListKeysResult <: SwaggerModel
    keys::Any # spec type: Union{ Nothing, Vector{StorageAccountKey} } # spec name: keys

    function StorageAccountListKeysResult(;keys=nothing)
        o = new()
        validate_property(StorageAccountListKeysResult, Symbol("keys"), keys)
        setfield!(o, Symbol("keys"), keys)
        o
    end
end # type StorageAccountListKeysResult

const _property_map_StorageAccountListKeysResult = Dict{Symbol,Symbol}(Symbol("keys")=>Symbol("keys"))
const _property_types_StorageAccountListKeysResult = Dict{Symbol,String}(Symbol("keys")=>"Vector{StorageAccountKey}")
Base.propertynames(::Type{ StorageAccountListKeysResult }) = collect(keys(_property_map_StorageAccountListKeysResult))
Swagger.property_type(::Type{ StorageAccountListKeysResult }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_StorageAccountListKeysResult[name]))}
Swagger.field_name(::Type{ StorageAccountListKeysResult }, property_name::Symbol) =  _property_map_StorageAccountListKeysResult[property_name]

function check_required(o::StorageAccountListKeysResult)
    true
end

function validate_property(::Type{ StorageAccountListKeysResult }, name::Symbol, val)
end
