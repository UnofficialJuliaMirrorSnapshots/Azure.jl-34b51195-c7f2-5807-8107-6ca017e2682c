# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.



mutable struct StorageAccountRegenerateKeyParameters <: SwaggerModel
    keyName::Any # spec type: Union{ Nothing, String } # spec name: keyName

    function StorageAccountRegenerateKeyParameters(;keyName=nothing)
        o = new()
        validate_property(StorageAccountRegenerateKeyParameters, Symbol("keyName"), keyName)
        setfield!(o, Symbol("keyName"), keyName)
        o
    end
end # type StorageAccountRegenerateKeyParameters

const _property_map_StorageAccountRegenerateKeyParameters = Dict{Symbol,Symbol}(Symbol("keyName")=>Symbol("keyName"))
const _property_types_StorageAccountRegenerateKeyParameters = Dict{Symbol,String}(Symbol("keyName")=>"String")
Base.propertynames(::Type{ StorageAccountRegenerateKeyParameters }) = collect(keys(_property_map_StorageAccountRegenerateKeyParameters))
Swagger.property_type(::Type{ StorageAccountRegenerateKeyParameters }, name::Symbol) = Union{Nothing,eval(Meta.parse(_property_types_StorageAccountRegenerateKeyParameters[name]))}
Swagger.field_name(::Type{ StorageAccountRegenerateKeyParameters }, property_name::Symbol) =  _property_map_StorageAccountRegenerateKeyParameters[property_name]

function check_required(o::StorageAccountRegenerateKeyParameters)
    (getproperty(o, Symbol("keyName")) === nothing) && (return false)
    true
end

function validate_property(::Type{ StorageAccountRegenerateKeyParameters }, name::Symbol, val)
end
